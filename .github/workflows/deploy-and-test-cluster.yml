name: Deploy and Test Cluster
run-name: >
  ${{ github.workflow }}: ${{ github.event_name }} for ${{ github.ref_name }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: 'Version to deploy'
        required: true
      deployed-by-build:
        type: string
        description: 'Build number of trigger build'
        required: true
        default: 'None'
      deployed-by-workflow:
        type: string
        description: 'Name of trigger workflow'
        required: true
        default: 'None'

jobs:
  deploy-app-with-kubectl:
    runs-on: ubuntu-latest
    steps:
      - name: Show Version
        run: |
          echo "Deploying Version: ${{ inputs.version }}"
          echo "Deployment triggered by workflow ${{ inputs.deployed-by-workflow }}. Run number: ${{ inputs.deployed-by-build }}"

      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.12.0

      - name: Deploy application
        run: |
          # Replace the version placeholder in the deployment manifest
          sed -i 's/${VERSION.TO.REPLACE}/${{ inputs.version }}/g' k8s/app.yml
          kubectl apply -f k8s/

      - name: Wait for Pods to be ready
        run: |
          if ! kubectl wait --for=condition=ready pod -l app=spring-6-project-template --timeout=180s; then
            echo "Pod did not become ready within 180 seconds. Displaying logs:"
            kubectl get pods -l app=spring-6-project-template
            POD_NAME=$(kubectl get pods -l app=spring-6-project-template -o jsonpath="{.items[0].metadata.name}")
            kubectl logs $POD_NAME
            echo "Describing the pod:"
            kubectl describe pod $POD_NAME
            exit 1
          fi
          BUILD_LINK="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ inputs.deployed-by-build }}"
          echo "::notice:: ### Deployed Version: ${{ inputs.version }}"
          echo "::notice:: ### Deployment triggered by workflow ${{ inputs.deployed-by-workflow }}. Run number: ${{ inputs.deployed-by-build }}: $BUILD_LINK"

      - name: Display Deployment Information
        if: always()
        run: |
          echo "Deployment Information:"
          kubectl get deployment spring-6-project-template -o yaml

  deploy-app-with-helm:
    runs-on: ubuntu-latest
    needs: deploy-app-with-kubectl

    steps:
      - name: Show Version
        run: |
          echo "Deploying Version: ${{ inputs.version }}"
          echo "Deployment triggered by workflow ${{ inputs.deployed-by-workflow }}. Run number: ${{ inputs.deployed-by-build }}"

      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up java 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml.
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Get Helm Version
        id: get_helm_version
        run: |
          set -o pipefail    # don't hide errors within pipes
          set -o nounset     # abort on unbound variable
          set -o errexit     # abort on nonzero exit status
          BRANCH_NAME=${{ github.ref_name }}
          if [[ "${BRANCH_NAME}" == "master" ||  "${BRANCH_NAME}" == "main" ]]; then
            echo "::notice:: ### Build of Master."
          else
            echo "::notice:: ### Build of Feature Branch."
            mvn -B versions:set -e -DnewVersion="${{ inputs.version }}"
          fi
          mvn -B -e initialize -s $GITHUB_WORKSPACE/settings.xml
          HELM_CHART_VERSION=$(grep 'helm.chart.version' target/helm.properties | cut -d'=' -f2)
          echo "helm chart version is: $HELM_CHART_VERSION"
          echo "HELM_CHART_VERSION=$HELM_CHART_VERSION" >> $GITHUB_OUTPUT

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.12.0

      - name: Pull Helm Chart
        env:
          HELM_CHART_VERSION: ${{ steps.get_helm_version.outputs.HELM_CHART_VERSION }}
        run: |
          if [ -z "$HELM_CHART_VERSION" ]; then
            echo "Error: HELM_CHART_VERSION is not set. Aborting."
            exit 1
          fi
          NAMESPACE=$(helm template spring-6-project-template ./spring-6-project-template | grep -m 1 'namespace:' | awk '{print $2}')
          if [ -z "$NAMESPACE" ]; then
            NAMESPACE="default"
          fi
          
          echo "### Application deployed to namespace: $NAMESPACE"
          echo "NAMESPACE=$NAMESPACE" >> $GITHUB_OUTPUT
          
          echo "Pulling Helm Chart Version: $HELM_CHART_VERSION"
          helm pull oci://registry-1.docker.io/domboeckli/spring-6-project-template --version "$HELM_CHART_VERSION"
          tar -xvf spring-6-project-template-*.tgz  

      - name: Deploy application with Helm
        run: |
          # Install/upgrade the Helm chart
          helm upgrade --install spring-6-project-template ./spring-6-project-template \
          --set image.tag=${{ inputs.version }} \
          --wait --timeout 5m \
          --debug
          

      - name: Wait for Pods to be ready
        run: |
          if ! kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=spring-6-project-template -n spring-6-project-template --timeout=180s; then
            POD_NAME=$(kubectl get pods -l app.kubernetes.io/name=spring-6-project-template -o jsonpath="{.items[0].metadata.name}" -n spring-6-project-template)
            kubectl logs $POD_NAME -n spring-6-project-template
            echo "Describing the pod:"
            kubectl describe pod $POD_NAME -n spring-6-project-template
            exit 1
          fi
          BUILD_LINK="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ inputs.deployed-by-build }}"
          echo "::notice:: ### Helm Deployed Version: ${{ inputs.version }}"
          echo "::notice:: ### Deployment triggered by workflow ${{ inputs.deployed-by-workflow }}. Run number: ${{ inputs.deployed-by-build }}: $BUILD_LINK"

      - name: Display Deployment Information
        if: always()
        run: |
          echo "Deployment Information:"
          
          echo "--- Get all namespaces"
          kubectl get all --all-namespaces
          
          echo "--- Describe all pods"
          kubectl describe pods --all-namespaces
          
          echo "--- Helm list all namespaces:"
          helm list --all-namespaces
          
          echo "--- Helm get app:"
          helm get all spring-6-project-template   
          
          echo "--- Show Events"
          kubectl get events --sort-by=.metadata.creationTimestamp --all-namespaces
          
          echo "--- Show Logs (if pods exist)"
          PODS=$(kubectl get pods -l app.kubernetes.io/name=spring-6-project-template -o jsonpath="{.items[*].metadata.name}" -n spring-6-project-template)
          if [ -n "$PODS" ]; then
            for POD in $PODS; do
              echo "Logs for pod $POD:"
              kubectl logs $POD -n spring-6-project-template --all-containers
            done
          else
            echo "No pods found with label app.kubernetes.io/name=spring-6-project-template in spring-6-project-template namespace"
            echo "Listing all pods in spring-6-project-template namespace:"
            kubectl get pods -n spring-6-project-template
          fi
          
          echo "--- Describe Helm release"
          helm get manifest spring-6-project-template -n spring-6-project-template || echo "Helm release not found"

