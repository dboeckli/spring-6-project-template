name: Package Cleanup
run-name: >
  ${{ github.workflow }}: ${{ github.event_name }} for ${{ github.ref_name }} by @${{ github.actor }}

on:
  workflow_dispatch:
  schedule:
    - cron: '5 1 * * *' # daily at 1:05
      
jobs:

  cleanup-maven-package:

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/delete-package-versions@v5
        id: delete-all-feature-and-pr-package
        with:
          # TODO: correct package name
          package-name: 'ch.dboeckli.template.spring-6-project-template'
          package-type: 'maven'
          min-versions-to-keep: 1
          delete-only-untagged-versions: 'true'
          # This regex ignores versions that do NOT contain '_feature_' or '_PR_feature_'
          # Effectively, it targets only feature and PR packages for deletion
          ignore-versions: '^((?!(_feature_|_PR_feature_)).)*$'

      - name: Display deleted feature and PR packages
        run: |
          echo "#1# Deleted versions: ${{ steps.delete-all-feature-and-pr-package.outputs.deleted-versions }}"
          echo "#1# Number of deleted versions: ${{ steps.delete-all-feature-and-pr-package.outputs.total-deleted-versions }}"
      
      - uses: actions/delete-package-versions@v5
        id: delete-all-packages
        with:
          # TODO: correct package name
          package-name: 'ch.dboeckli.template.spring-6-project-template'
          package-type: 'maven'
          min-versions-to-keep: 3
          delete-only-untagged-versions: 'true'
          # This regex ignores versions that match the semantic versioning pattern (e.g., 1.0.0)
          # It will keep these versions and delete others
          ignore-versions: '^\\d+\\.\\d+\\.\\d+$'
          
      - name: Display deleted packages
        run: |
          echo "#2# Deleted versions: ${{ steps.delete-all-packages.outputs.deleted-versions }}"
          echo "#2# Number of deleted versions: ${{ steps.delete-all-packages.outputs.total-deleted-versions }}"    
